name: "[Merge] changelog-test"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: '`vx.y.z` 형태로 버전을 입력해주세요.'
        required: true
        default: v1.0.0
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "src/VERSION"

env:
  TAG: ${{ github.event.inputs.tag }}

jobs:
  tagging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GIKANG_TOKEN }}
      - name: git tagging
        run: |
          git tag ${{ env.TAG }}
          git push origin "${{ env.TAG }}"


  update_master_branch_version_file:
      needs: tagging
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            token: ${{ secrets.GIKANG_TOKEN }}
        - name: get versions
          run: |
            echo "old_version=$(cat src/VERSION)" >> $GITHUB_ENV
            echo "old_major=$(cat src/VERSION | cut -c 2- | cut -d'.' -f1)" >> $GITHUB_ENV
            echo "old_minor=$(cat src/VERSION | cut -c 2- | cut -d'.' -f2)" >> $GITHUB_ENV
            echo "old_patch=$(cat src/VERSION | cut -c 2- | cut -d'.' -f3)" >> $GITHUB_ENV
            echo "new_major=$(echo ${{ env.TAG }} | cut -c 2- | cut -d'.' -f1)" >> $GITHUB_ENV
            echo "new_minor=$(echo ${{ env.TAG }} | cut -c 2- | cut -d'.' -f2)" >> $GITHUB_ENV
            echo "new_patch=$(echo ${{ env.TAG }} | cut -c 2- | cut -d'.' -f3)" >> $GITHUB_ENV
        - name: compare versions
          run: |
            if [ ${{ env.TAG }} == ${{ env.old_version }} ];
            then
              echo "New version cannot be the same as old version."
              exit 1
            elif [ ${{ env.old_major }} \> ${{ env.new_major }} ];
            then
              echo "Old major version cannot be greater than new major version"
              exit 1
            elif [ ${{ env.old_minor }} \> ${{ env.new_minor }} ];
            then
              echo "Old minor version cannot be greater than new minor version"
              exit 1
            elif [ $old_patch ];
            then
              if [ $old_patch \> $new_patch ];
              then
                echo "Old patch version cannot be greater than new patch version"
                exit 1
              else
                echo "version=$new_version"
              fi
            else
              echo "version=$new_version"
            fi
        - name: update version file
          run: |
            echo ${{ env.TAG }} > src/VERSION
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "[CI/CD] release version ${{ env.TAG }}"
        - name: push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GIKANG_TOKEN }}
            branch: master

  changelog:
    needs: update_master_branch_version_file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Generate release changelog"
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          pullRequests: true
          author: true
          output: changelog_tmp.MD
          token: ${{ secrets.GIKANG_TOKEN }}
      - name: Get current datetime
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Check changelog directory
        run: |
          if [ -d "./changelog" ]; then echo "directory exists"; else mkdir changelog; fi
      - name: "Copying file to changelog directory"
        uses: canastro/copy-file-action@master
        with:
          source: "/github/workspace/changelog_tmp.MD"
          target: "changelog/${{ steps.date.outputs.date}}-changelog.MD"
      - name: "Update changelog"
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[CI/CD] update changelog"
      - name: "Push changes"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIKANG_TOKEN }}
          branch: master


